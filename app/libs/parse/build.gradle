apply plugin: "com.android.library"
apply plugin: "com.github.kt3k.coveralls"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        consumerProguardFiles "release-proguard.pro"
    }

    packagingOptions {
        exclude '**/BuildConfig.class'
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

ext {
    // Note: Don't update past 3.12.x, as it sets the minSdk to Android 5.0
    okhttpVersion = "3.12.10"
}

dependencies {
    api "androidx.annotation:annotation:1.1.0"
    api "androidx.core:core:1.2.0"
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"
    api project(':bolts-tasks')

    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
    testImplementation "org.mockito:mockito-core:1.10.19"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
}

//region Code Coverage

apply plugin: "jacoco"

jacoco {
    toolVersion "0.7.1.201405082137"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    sourceDirectories = files("${buildDir.parent}/src/main/java")
    additionalSourceDirs = files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/generated/source/r/debug"
    ])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

//endregion

//region Coveralls

coveralls.jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"

//endregion

apply from: "https://raw.githubusercontent.com/Commit451/gradle-android-javadocs/1.1.0/gradle-android-javadocs.gradle"
